{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ivan\\\\Documents\\\\CursoNextJS\\\\pages\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport \"isomorphic-fetch\";\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport Error from 'next/error';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channels = _this$props.channels,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Se da\\xF1o el servidor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        title: \"podcasts\",\n        children: /*#__PURE__*/_jsxDEV(ChannelGrid, {\n          channels: channels\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var req, _yield$req$json, channels;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"https://api.audioboom.com/channels/recommended\");\n\n              case 3:\n                req = _context.sent;\n                _context.next = 6;\n                return req.json();\n\n              case 6:\n                _yield$req$json = _context.sent;\n                channels = _yield$req$json.body;\n                return _context.abrupt(\"return\", {\n                  channels: channels,\n                  statusCode: 200\n                });\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", {\n                  channels: null,\n                  statusCode: 503\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:/Users/Ivan/Documents/CursoNextJS/pages/index.js"],"names":["React","Layout","ChannelGrid","Error","props","channels","statusCode","fetch","req","json","body","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;;;;;;;;;;;;;6BAcW;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,UADX,eACWA,UADX;;AAGP,UAAIA,UAAU,KAAK,GAAnB,EAAyB;AACvB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,0BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAKD;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;;;;;;;;;;;;uBArBiBE,KAAK,CAAC,gDAAD,C;;;AAAjBC,gBAAAA,G;;uBAC2BA,GAAG,CAACC,IAAJ,E;;;;AAAnBJ,gBAAAA,Q,mBAANK,I;iDAEC;AAAEL,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,UAAU,EAAE;AAAxB,iB;;;;;iDAEA;AAAED,kBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,kBAAAA,UAAU,EAAE;AAA9B,iB;;;;;;;;;;;;;;;;;;;EARkBN,KAAK,CAACW,S","sourcesContent":["import React from \"react\";\r\nimport \"isomorphic-fetch\";\r\nimport Layout from '../components/Layout';\r\nimport ChannelGrid from '../components/ChannelGrid';\r\nimport Error from 'next/error';\r\n\r\nexport default class extends React.Component {\r\n  static async getInitialProps() {\r\n    try {\r\n    let req = await fetch(\"https://api.audioboom.com/channels/recommended\");\r\n    let { body: channels } = await req.json();\r\n\r\n    return { channels, statusCode: 200 };\r\n  } catch(e){\r\n    return { channels: null, statusCode: 503}\r\n  }\r\n  }\r\n\r\n  render() {\r\n    const { channels, statusCode } = this.props;\r\n\r\n    if (statusCode !== 200 ) {\r\n      return <div>Se da√±o el servidor</div>\r\n    }\r\n\r\n    return (\r\n      <Layout title=\"podcasts\" >\r\n        <ChannelGrid channels = { channels } />\r\n      </ Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}